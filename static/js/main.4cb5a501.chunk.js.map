{"version":3,"sources":["configs/Api.js","layout/Item.js","components/Home.js","components/Lesson.js","components/LessonDetail.js","layout/Header.js","layout/Footer.js","components/Login.js","reducers/UserReducer.js","App.js","serviceWorker.js","index.js"],"names":["endpoints","courseId","lessonId","axios","create","baseURL","Item","props","nav","useNavigate","btnDetail","isLesson","Col","md","xs","Card","Img","variant","src","image","Body","Title","subject","Button","onClick","id","Home","useState","courses","setCourses","useSearchParams","q","useEffect","a","query","cateId","get","kw","Api","res","data","results","loadCourses","Container","className","length","Spinner","animation","Row","map","c","Lesson","lessons","setLessons","useParams","console","info","loadLessons","LessonDetail","lesson","setLesson","loadLessonById","Image","fluid","tags","t","Badge","bg","name","dangerouslySetInnerHTML","__html","content","Header","categories","setCategories","setKw","useContext","UserContext","user","dispatch","loadCategories","btn","to","username","href","evt","preventDefault","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","Nav","url","Form","onSubmit","event","FormControl","type","value","onChange","target","placeholder","aria-label","Footer","Alert","Heading","Login","setUsername","password","setPassword","Group","controlId","Label","Control","myReducer","action","payload","createContext","App","useReducer","Provider","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cb5a501.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const endpoints = {\n    \"categories\": \"/categories/\",\n    \"courses\": \"/courses/\",\n    \"lessons\": (courseId) => `/courses/${courseId}/lessons/`,\n    \"lesson-detail\": (lessonId) => `/lessons/${lessonId}/`\n}\n\nexport default axios.create({\n    baseURL: \"http://thanhduong.pythonanywhere.com\"\n})","import React from 'react'\nimport { Col, Card, Button } from \"react-bootstrap\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst Item = (props) => {\n    const nav = useNavigate()\n\n    const goToLesson = () => {\n        if (props.isLesson === true)\n            nav(`/lessons/${props.id}`)\n        else\n            nav(`/courses/${props.id}/lessons`)\n    }\n\n    let btnDetail = \"Xem cac bai hoc\"\n    if (props.isLesson === true)\n        btnDetail = \"Xem chi tiet\"\n\n    return (\n        <Col md={4} xs={12}>\n            <Card>\n                <Card.Img variant=\"top\" src={props.image} />\n                <Card.Body>\n                    <Card.Title>{props.subject}</Card.Title>\n                    <Button variant=\"primary\" onClick={goToLesson}>{btnDetail}</Button>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default Item","import React, { useState, useEffect } from 'react';\nimport { Container, Row,  Spinner } from 'react-bootstrap';\nimport { useSearchParams } from 'react-router-dom';\nimport Api, { endpoints } from '../configs/Api';\nimport Item from '../layout/Item';\n\nfunction Home() {\n    const [courses, setCourses] = useState([])\n    const [q] = useSearchParams()\n\n    useEffect(() => {\n        const loadCourses = async () => {\n            let query = \"\"\n\n            let cateId = q.get(\"category_id\")\n            if (cateId !== null)\n                query += `category_id=${cateId}`\n\n            let kw = q.get(\"kw\")\n            if (kw !== null)\n                if (query === \"\")\n                    query += `kw=${kw}`\n                else\n                    query += `&kw=${kw}`  \n\n            const res = await Api.get(`${endpoints['courses']}?${query}`)\n            setCourses(res.data.results)\n        }\n\n        loadCourses()\n    }, [q])\n\n    return (\n        <Container>\n            <h1 className=\"text-center text-danger\">DANH MUC KHOA HOC</h1>\n            \n            {courses.length == 0 && <Spinner animation=\"grow\" />}\n            \n            <Row>\n                {courses.map(c => {\n                    return <Item id={c.id} image={c.image} subject={c.subject} />\n                })}\n            </Row>\n        </Container>   \n    )\n}\n\nexport default Home","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Spinner, Row } from 'react-bootstrap';\nimport Api, { endpoints } from '../configs/Api';\nimport Item from '../layout/Item';\n\nfunction Lesson() {\n    const [lessons, setLessons] = useState([])\n    const { courseId } = useParams()\n\n    useEffect(() => {\n        const loadLessons = async () => {\n            const res = await Api.get(endpoints['lessons'](courseId))\n            setLessons(res.data)\n\n            console.info(res.data)\n        }\n\n        loadLessons()\n    }, [])\n\n    return (\n        <Container>\n            <h1 className=\"text-center text-info\">MY LESSON (COURSE: {courseId})</h1>\n\n            {lessons.length == 0 && <Spinner animation=\"grow\" />}\n            \n            <Row>\n                {lessons.map(c => {\n                    return <Item id={c.id} image={c.image} subject={c.subject} isLesson={true} />\n                })}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Lesson","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Api, { endpoints } from '../configs/Api'\nimport { Container, Spinner, Row, Badge, Col, Image } from 'react-bootstrap'\n\nconst LessonDetail = () => {\n    const { lessonId } = useParams()\n    const [lesson, setLesson] = useState(null)\n\n    useEffect(() => {\n        const loadLessonById = async () => {\n            const res = await Api.get(endpoints['lesson-detail'](lessonId))\n            setLesson(res.data)\n        }\n\n        loadLessonById()\n    }, [])\n\n    if (lesson === null)\n        return <Spinner animation=\"grow\" />\n    \n\n    return (\n        <Container>\n            <Row>\n                <Col md={5} xs={12}>   \n                    <Image src={lesson.image} fluid />\n                </Col>\n                <Col md={7} xs={12}>\n                    <h2>{lesson.subject}</h2>\n                    {lesson.tags.map(t => <Badge bg=\"secondary\">{t.name}</Badge>)}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <div dangerouslySetInnerHTML={{__html: lesson.content}}></div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default LessonDetail","import React, { useEffect, useState, useContext } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { UserContext } from \"../App\"\nimport Api, { endpoints } from '../configs/Api';\n\nfunction Header() {\n    const [categories, setCategories] = useState([])\n    const [kw, setKw] = useState(\"\")\n    const nav = useNavigate()\n    const [user, dispatch] = useContext(UserContext)\n\n    useEffect(() => {\n        let loadCategories = async () => {\n            let res = await Api.get(endpoints['categories'])\n\n            setCategories(res.data)\n        }\n        \n        loadCategories()\n    }, [])\n\n    const search = (event) => {\n        event.preventDefault()\n\n        nav(`/?kw=${kw}`)\n    }\n\n    const logout = (evt) => {\n        evt.preventDefault()\n        dispatch({\"type\": \"logout\"})\n    }\n\n    let btn = <Link to=\"/login\" className=\"nav-link text-danger\">Dang nhap</Link>\n    if (user != null)\n        btn = <>\n            <Link to=\"/\" className=\"nav-link text-danger\">{user.username}</Link>\n            <a href=\"#\" onClick={logout} className=\"nav-link text-danger\">Dang xuat</a>\n        </>\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Link to=\"/\" className=\"navbar-brand\">e-Course Online</Link>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    {categories.map(c => {\n                        const url = `/?category_id=${c.id}`\n                        return <Link to={url} className=\"nav-link\">{c.name}</Link>\n                    })}\n                    \n                    {btn}\n                </Nav>\n                <Form className=\"d-flex\" onSubmit={search}>\n                    <FormControl\n                        type=\"search\"\n                        value={kw}\n                        onChange={event => setKw(event.target.value)}\n                        placeholder=\"Tu khoa...\"\n                        className=\"me-2\"\n                        aria-label=\"Search\" />\n                    <Button type=\"submit\" variant=\"outline-success\">Tim</Button>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <Alert variant=\"success\">\n            <Alert.Heading>eCourseApp Online</Alert.Heading>\n            <p>\n               Duong Huu Thanh &copy; 2022\n            </p>\n        </Alert>\n    )\n}\n\nexport default Footer","import React, { useState, useContext } from 'react'\nimport { Form, Button, Container } from 'react-bootstrap'\nimport { UserContext } from '../App'\nimport { Navigate } from 'react-router-dom'\n\nconst Login = () => {\n    const [username, setUsername] = useState()\n    const [password, setPassword] = useState()\n    const [user, dispatch] = useContext(UserContext)\n\n    const login = (evt) => {\n        evt.preventDefault() \n        if (username === 'admin' && password === '123')\n            dispatch({\n                \"type\": \"login\",\n                \"payload\": {\n                    \"username\": \"admin\"\n                }\n            })\n    }\n\n\n    if (user != null)\n        return <Navigate to=\"/\" />\n        \n    return (\n        <Container>\n            <h1 className=\"text-center text-danger\">DANG NHAP</h1>\n            <Form onSubmit={login}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" \n                        value={username} \n                        onChange={(evt) => setUsername(evt.target.value)}\n                        placeholder=\"Nhap username\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" \n                            value={password} \n                            onChange={(evt) => setPassword(evt.target.value)}\n                            placeholder=\"Password\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default Login","const myReducer = (user, action) => {\n    switch (action.type) {\n        case \"login\": \n            return action.payload\n        case \"logout\":\n            return null\n\n    }\n\n    return user\n}\n\nexport default myReducer","import React, { useReducer, createContext } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport Lesson from './components/Lesson';\nimport LessonDetail from './components/LessonDetail';\nimport Header from './layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './layout/Footer';\nimport Login from './components/Login';\nimport myReducer from './reducers/UserReducer';\n\nexport const UserContext = createContext()\n\nfunction App() {\n  const [user, dispatch] = useReducer(myReducer)\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={[user, dispatch]}>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/courses/:courseId/lessons\" element={<Lesson />} />\n          <Route path=\"/lessons/:lessonId\" element={<LessonDetail />} />\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n        <Footer />\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}